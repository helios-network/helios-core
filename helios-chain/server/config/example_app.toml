# Example app.toml configuration file for Helios Core
# This file shows how to configure rate limiting and connection limiting

###############################################################################
###                           JSON RPC Configuration                        ###
###############################################################################

[json-rpc]

# Enable defines if the JSONRPC server should be enabled.
enable = true

# Address defines the EVM RPC HTTP server address to bind to.
address = "0.0.0.0:8545"

# Address defines the EVM WebSocket server address to bind to.
ws-address = "0.0.0.0:8546"

# API defines a list of JSON-RPC namespaces that should be enabled
# Example: "eth,txpool,personal,net,debug,web3"
api = "eth,txpool,personal,net,debug,web3"

# GasCap sets a cap on gas that can be used in eth_call/estimateGas (0=infinite). Default: 25,000,000.
gas-cap = 25000000

# Allow insecure account unlocking when account-related RPCs are exposed by http
allow-insecure-unlock = true

# EVMTimeout is the global timeout for eth_call. Default: 5s.
evm-timeout = "5s"

# TxFeeCap is the global tx-fee cap for send transaction. Default: 1eth.
txfee-cap = 1

# FilterCap sets the global cap for total number of filters that can be created
filter-cap = 200

# FeeHistoryCap sets the global cap for total number of blocks that can be fetched
feehistory-cap = 100

# LogsCap defines the max number of results can be returned from single 'eth_getLogs' query.
logs-cap = 10000

# BlockRangeCap defines the max block range allowed for 'eth_getLogs' query.
block-range-cap = 10000

# HTTPTimeout is the read/write timeout of http json-rpc server.
http-timeout = "30s"

# HTTPIdleTimeout is the idle timeout of http json-rpc server.
http-idle-timeout = "2m0s"

# AllowUnprotectedTxs restricts unprotected (non EIP155 signed) transactions to be submitted via
# the node's RPC when the global parameter is disabled.
allow-unprotected-txs = false

# MaxOpenConnections sets the maximum number of simultaneous connections
# for the server listener.
max-open-connections = 0

# EnableIndexer enables the custom transaction indexer for the EVM (ethereum transactions).
enable-indexer = false

# MetricsAddress defines the EVM Metrics server address to bind to. Pass --metrics in CLI to enable
# Prometheus metrics path: /debug/metrics/prometheus
metrics-address = "127.0.0.1:6065"

# Upgrade height for fix of revert gas refund logic when transaction reverted.
fix-revert-gas-refund-height = 0

# ========================================
# RATE LIMITING CONFIGURATION
# ========================================

# RateLimitRequestsPerSecond defines the maximum number of requests per second per IP
# Default: 10 requests per second
rate-limit-requests-per-second = 10

# RateLimitWindow defines the time window for rate limiting
# Default: "1s" (1 second)
# Other examples: "500ms", "2s", "5s"
rate-limit-window = "1s"

# MaxConcurrentConnections defines the maximum number of concurrent connections
# Default: 1000 connections
max-concurrent-connections = 1000

# MaxRequestDuration defines the maximum duration for a single request.
max-request-duration = "30s"

# Fee history configuration
feehistory-cap = 100

# Method-specific rate limits (overrides default rate limit)
# Format: "method1:limit1,method2:limit2"
method-rate-limits = "eth_call:1,eth_estimateGas:1,eth_getLogs:3,eth_getStorageAt:5"

###############################################################################
###                             TLS Configuration                           ###
###############################################################################

[tls]

# Certificate path defines the cert.pem file path for the TLS configuration.
certificate-path = ""

# Key path defines the key.pem file path for the TLS configuration.
key-path = ""

###############################################################################
###                           Rosetta Configuration                         ###
###############################################################################

[rosetta]

# Enable defines if the Rosetta API server should be enabled.
enable = false

# Address defines the Rosetta API server to listen on.
address = ":8080"

# Network defines the name of the blockchain that will be returned by Rosetta.
blockchain = "helios"

# Network defines the name of the network that will be returned by Rosetta.
network = "helios"

# TendermintRPC defines the endpoint to connect to CometBFT RPC,
# specifying 'tcp://' before is not required, usually it's at port 26657
tendermint-rpc = "localhost:26657"

# GRPCEndpoint defines the cosmos application gRPC endpoint
# usually it is located at 9090 port
grpc-endpoint = "localhost:9090"

# Retries defines the number of retries when connecting to the node before failing.
retries = 5

# Offline defines if Rosetta server should run in offline mode.
offline = false

# EnableFeeSuggestion indicates to use fee suggestion when 'construction/metadata' is called without gas limit and price.
enable-fee-suggestion = false

# GasToSuggest defines gas limit when calculating the fee
gas-to-suggest = 200000 